name: build_arm_bullseye
on:
  push:
    branches:
      - main
    tags:
      - "*"

permissions:
  contents: write
  pages: write
  id-token: write

env:
  REPO_NAME: netopeer-deb
  CODENAME: bullseye
  COMPONENTS: main
  ARCHITECTURES: arm64

jobs:
  build:
    runs-on: ubuntu-22.04-arm
    container:
      image: ghcr.io/astral-sh/uv:bookworm-slim
    outputs:
      artifact_id: ${{ steps.upload-artifact.outputs.artifact-id }}
      keyring: ${{ steps.create-apt-repo.outputs.keyring }}
    steps:
      - name: Install apkg
        run: uv tool install apkg
      - name: Install build deps
        run: |
          apt-get update && apt-get install -y --no-install-recommends \
            git \
            build-essential \
            libcmocka-dev \
            libpcre2-dev \
            pkg-config \
            cmake \
            debhelper 

      - name: download sources
        run: |
          git config --global http.sslVerify false 
          cd ~
          git clone --depth=1 https://github.com/CESNET/libyang  

      - name: build libyang
        run: |
          cd ~/libyang && uv tool run apkg build 
          apt-get install -y ~/libyang/pkg/pkgs/debian-12/libyang*/*.deb

      - name: build libyang wheel
        run: |
          mkdir -p ~/wheels && cd ~/wheels && uvx -p 3.11 pip wheel libyang

      - name: Collect all builds
        run: |
          mkdir -p ~/builds && cp ~/*/pkg/pkgs/debian-12/*/* ~/wheels/*.whl ~/builds/

      - name: Upload builds as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: builds
          path: ~/builds/
          retention-days: 7

  release:
    if: github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Download builds artifact
        uses: actions/download-artifact@v4
        with:
          name: builds
          path: ~/builds/

      - name: Publish release
        uses: ghalactic/github-release-from-tag@v5
        with:
          generateReleaseNotes: "true"
          assets: |
            - path: ~/builds/*

      - name: Copy debs to current dir
        # workaround for scan-dir input of apt-repo-action not working
        run: cp -v ~/builds/*.deb ./

